{"version":3,"file":"contentScript.js","mappings":";;;;;;;;;;;;AACA;AAAA;AAAA;AADA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAjsources":["webpack://chrome-extension/./src/content/contentScript.js"],"sourcesContent":["// let Vimeo = require('vimeo').Vimeo;\r\n//   let client = new Vimeo(\"{edee083da3cc62ef0230887191701be5c0de11d5}}\", \"{qx4IqzOGKVTsZ5YLQ3HM75pVP1nJhZsbYlQGxyxIfcd7Xm06NVoGt9gcOvXXQPrF3DKcDVpFdz6tixNyVnpAZpx8wRlWpJ7XIrU3JxMnbHsSDSeDCu3Rn62vtnx8dkJG}\", \"{9b6d07aceaad28db0ff6815ea3d3abfc}\");\r\n\r\n//   client.request({\r\n//     method: 'GET',\r\n//     path: '/tutorial'\r\n//   }, function (error, body, status_code, headers) {\r\n//     if (error) {\r\n//       console.log(error);\r\n//     }\r\n\r\n//     console.log(body);\r\n//   })\r\nwindow.addEventListener('message', (event) => {\r\n  if (event.origin !== 'http://localhost:3000') {\r\n    console.error('Untrusted origin:', event.origin);\r\n    return;\r\n  }\r\n\r\n  if (event.data.type === 'SEND_TOKEN') {\r\n    const token = event.data.token;\r\n    console.log('Token received in content script:', token);\r\n\r\n    // Send token to the background script\r\n    chrome.runtime.sendMessage({ type: 'AUTH_WITH_TOKEN', token: token }, (response) => {\r\n      if (response?.success) {\r\n        console.log('User ID received from background:', response.userId);\r\n      } else {\r\n        console.error('Failed to authenticate:', response?.error);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n\r\nvar timer = document.createElement('div');\r\ntimer.style.color = 'white';\r\ntimer.style.display = 'flex';\r\ntimer.style.cursor = 'pointer';\r\ntimer.style.width = '25%';\r\ntimer.innerHTML = `<p style=\"display: flex; align-items: center\" ><span id=\"time\" style=\"font-size: 1.7rem;\">00:00:00</span><span>&nbsp;</span></p>`\r\n\r\nvar timerImg = document.createElement('img');\r\ntimerImg.src = 'https://res.cloudinary.com/ddtbgrglm/image/upload/v1732530647/dot_bog23u.svg';\r\ntimer.alt = 'dot';\r\ntimerImg.style.width = '10px';\r\ntimerImg.style.height = '10px';\r\ntimerImg.style.margin = 'auto';\r\ntimer.appendChild(timerImg);\r\n\r\n\r\nvar divider = document.createElement('div');\r\ndivider.style.justifyItems = 'center';\r\ndivider.style.justifyContent = 'center';\r\ndivider.style.border = 'none';\r\n\r\nvar dividerImg = document.createElement('img');\r\ndividerImg.style.height = '5vh';\r\ndividerImg.style.marginTop = 'auto';\r\ndividerImg.style.marginBottom = 'auto';\r\ndividerImg.src = 'https://res.cloudinary.com/ddtbgrglm/image/upload/v1732531164/divider_w8u8ah.svg';\r\ndividerImg.alt = 'divider';\r\ndivider.appendChild(dividerImg);\r\n\r\n\r\n\r\nvar pauseBtn = document.createElement('button');\r\npauseBtn.style.cursor = 'pointer';\r\npauseBtn.style.justifyItems = 'center';\r\npauseBtn.style.justifyContent = 'center';\r\npauseBtn.style.background = '#ffffff';\r\npauseBtn.style.border = 'none';\r\npauseBtn.style.height = '5vh';\r\npauseBtn.style.width = '14%';\r\npauseBtn.style.borderRadius = '50px';\r\npauseBtn.style.marginTop = 'auto';\r\npauseBtn.style.marginBottom = 'auto';\r\npauseBtn.style.paddingTop = '0.5vh';\r\n\r\nvar pauseImg = document.createElement('img');\r\npauseImg.style.height = '3vh';\r\npauseImg.style.width = '45%';\r\npauseImg.style.margin = 'auto';\r\n\r\npauseImg.src = 'https://i.ibb.co/6Z030k8/play-svgrepo-com-2.png';\r\npauseImg.alt = 'play';\r\npauseBtn.appendChild(pauseImg);\r\n\r\n\r\n\r\nvar stopB = document.createElement('button');\r\nstopB.style.cursor = 'pointer';\r\nstopB.style.justifyItems = 'center';\r\nstopB.style.justifyContent = 'center';\r\nstopB.style.background = '#ffffff';\r\nstopB.style.border = 'none';\r\nstopB.style.height = '5vh';\r\nstopB.style.width = '14%';\r\nstopB.style.borderRadius = '50px';\r\nstopB.style.marginTop = 'auto';\r\nstopB.style.marginBottom = 'auto';\r\nstopB.style.paddingBottom = '0.5vh';\r\n\r\nvar stopImg = document.createElement('img');\r\nstopImg.style.height = '5vh';\r\nstopImg.style.width = '80%';\r\nstopImg.style.margin = 'auto';\r\n\r\nstopImg.src = 'https://i.ibb.co/k4bjQn0/stop-svgrepo-com-1.png';\r\nstopImg.alt = 'stop';\r\nstopB.appendChild(stopImg);\r\n\r\n\r\n\r\nvar videoBtn = document.createElement('button');\r\nvideoBtn.style.cursor = 'pointer';\r\nvideoBtn.style.justifyItems = 'center';\r\nvideoBtn.style.justifyContent = 'center';\r\nvideoBtn.style.background = '#ffffff';\r\nvideoBtn.style.border = 'none';\r\nvideoBtn.style.height = '5vh';\r\nvideoBtn.style.width = '14%';\r\nvideoBtn.style.borderRadius = '50px';\r\nvideoBtn.style.marginTop = 'auto';\r\nvideoBtn.style.marginBottom = 'auto';\r\nvideoBtn.style.paddingTop = '0.5vh';\r\n\r\nvar videoImg = document.createElement('img');\r\nvideoImg.style.height = '3vh';\r\nvideoImg.style.width = '55%';\r\nvideoImg.style.margin = 'auto';\r\n\r\nvideoImg.src = 'https://i.ibb.co/PMjHVPv/video-camera-svgrepo-com-3.png';\r\nvideoImg.alt = 'video';\r\nvideoBtn.appendChild(videoImg);\r\n\r\n\r\n\r\nvar audioBtn = document.createElement('button');\r\naudioBtn.style.cursor = 'pointer';\r\naudioBtn.style.justifyItems = 'center';\r\naudioBtn.style.justifyContent = 'center';\r\naudioBtn.style.background = '#ffffff';\r\naudioBtn.style.border = 'none';\r\naudioBtn.style.height = '5vh';\r\naudioBtn.style.width = '14%';\r\naudioBtn.style.borderRadius = '50px';\r\naudioBtn.style.marginTop = 'auto';\r\naudioBtn.style.marginBottom = 'auto';\r\naudioBtn.style.paddingTop = '0.5vh';\r\n\r\nvar audioImg = document.createElement('img');\r\naudioImg.style.height = '3vh';\r\naudioImg.style.width = '70%';\r\naudioImg.style.margin = 'auto';\r\n\r\naudioImg.src = 'https://i.ibb.co/gtjr5BY/mic-microphone-podcast-svgrepo-com.png';\r\naudioImg.alt = 'audio';\r\naudioBtn.appendChild(audioImg);\r\n\r\n\r\n\r\nvar trash = document.createElement('button');\r\ntrash.style.cursor = 'pointer';\r\ntrash.style.justifyItems = 'center';\r\ntrash.style.justifyContent = 'center';\r\ntrash.style.background = '#4B4B4B';\r\ntrash.style.border = 'none';\r\ntrash.style.height = '5vh';\r\ntrash.style.width = '14%';\r\ntrash.style.borderRadius = '50px';\r\ntrash.style.marginTop = 'auto';\r\ntrash.style.marginBottom = 'auto';\r\n\r\n\r\nvar trashImg = document.createElement('img');\r\ntrashImg.style.height = '3vh';\r\ntrashImg.style.width = '50%';\r\ntrashImg.style.margin = 'auto';\r\n\r\ntrashImg.src = 'https://i.ibb.co/P12hFgn/bin.png';\r\ntrashImg.alt = 'trash';\r\ntrash.appendChild(trashImg);\r\n\r\n\r\n\r\nvar videoContainer = document.createElement('div');\r\nvideoContainer.style.borderRadius = '50%';\r\nvideoContainer.style.height = '10rem';\r\nvideoContainer.style.width = '10rem';\r\nvideoContainer.style.overflow = 'hidden';\r\nvideoContainer.style.display = 'none';\r\n\r\nvar videoSource = document.createElement('video');\r\nvideoSource.style.width = '100%';\r\nvideoSource.style.height = '100%';\r\nvideoSource.style.objectFit = 'cover';\r\nvideoSource.style.objectPosition = 'center';\r\n\r\nvideoContainer.appendChild(videoSource);\r\n\r\n\r\nvar buttonsContainer = document.createElement('div');\r\nbuttonsContainer.style.display = 'flex';\r\nbuttonsContainer.style.justifyContent = 'space-between';\r\nbuttonsContainer.style.width = '70%';\r\nbuttonsContainer.appendChild(pauseBtn);\r\nbuttonsContainer.appendChild(stopB);\r\nbuttonsContainer.appendChild(videoBtn);\r\nbuttonsContainer.appendChild(audioBtn);\r\nbuttonsContainer.appendChild(trash);\r\n\r\nvar container = document.createElement('div');\r\ncontainer.style.background = '#141414';\r\ncontainer.style.display = 'flex';\r\ncontainer.style.width = '72%';\r\ncontainer.style.height = '9vh';\r\ncontainer.style.borderRadius = '50px';\r\ncontainer.style.border = '7px solid #4B4B4B';\r\ncontainer.style.alignItems = 'center';\r\ncontainer.style.justifyContent = 'space-between';\r\ncontainer.style.paddingLeft = '1%';\r\ncontainer.style.paddingRight = '1%';\r\ncontainer.style.marginTop = 'auto';\r\ncontainer.style.marginBottom = 'auto';\r\n\r\n\r\ncontainer.appendChild(timer);\r\ncontainer.appendChild(divider);\r\ncontainer.appendChild(buttonsContainer);\r\n\r\n\r\n\r\nvar widget = document.createElement('div');\r\n\r\nwidget.appendChild(videoContainer);\r\nwidget.appendChild(container);\r\n\r\nwidget.style.display = 'flex';\r\nwidget.style.margin = '0 0 0 2rem';\r\nwidget.style.gap = '0.5rem';\r\nwidget.style.alignItems = 'center';\r\nwidget.style.position = 'fixed';\r\nwidget.style.zIndex = '50';\r\nwidget.style.bottom = '5vh';\r\nwidget.style.left = '1.2%';\r\nwidget.style.width = '40%';\r\nwidget.style.justifyContent = 'space-between';\r\n\r\n\r\nvar body = document.body.appendChild(widget);\r\n\r\nvar isRecording = null;\r\nvar isStopped = null;\r\n\r\nvar constraints = {\r\n    audio: true,\r\n    video: true,\r\n  };\r\n  \r\n  \r\n  \r\n  let recorder;\r\n  let isPaused = false;\r\n  let recordedChunks = [];\r\n  let stream = null;\r\n  let audio = null;\r\n  var isCamera = null;\r\n  var cameraStream = null;\r\n\r\n  let timerInterval;\r\n  let seconds = 0;\r\n  let minutes = 0;\r\n  let hours = 0;\r\n  \r\n  console.log({ isRecording, isStopped }, 'check ');\r\n\r\nfunction updateTimer() {\r\n  seconds++;\r\n  if (seconds === 60) {\r\n    seconds = 0;\r\n    minutes++;\r\n    if (minutes === 60) {\r\n      minutes = 0;\r\n      hours++;\r\n    }\r\n  }\r\n\r\n  const formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n\r\n  document.getElementById('time').textContent = formattedTime; // Update the timer display\r\n}\r\n\r\n\r\n\r\nfunction startTimer() {\r\n  if (!timerInterval) {\r\n    timerInterval = setInterval(updateTimer, 1000);\r\n  }\r\n}\r\n\r\n// function pauseTimer() {\r\n//   if (timerInterval) {\r\n//     clearInterval(timerInterval);\r\n//     timerInterval = null;\r\n//   }\r\n// }\r\n\r\nfunction resumeTimer() {\r\n  if (!timerInterval) {\r\n    startTimer();\r\n  }\r\n}\r\n\r\n// function stopTimer() {\r\n//   if (timerInterval) {\r\n//     clearInterval(timerInterval);\r\n//     timerInterval = null;\r\n//   }\r\n  \r\n//   seconds = 0;\r\n//   minutes = 0;\r\n//   hours = 0;\r\n//   updateTimer(); // Update the timer display\r\n// }\r\n\r\nfunction pauseTimer() {\r\n  if (timerInterval) {\r\n    clearInterval(timerInterval);\r\n    timerInterval = null;\r\n  }\r\n}\r\n\r\nfunction stopTimer() {\r\n  pauseTimer(); // stops the interval without resetting time\r\n  seconds = 0;\r\n  minutes = 0;\r\n  hours = 0;\r\n  updateTimer();\r\n}\r\n\r\n\r\n  \r\n\r\n\r\nasync function startRecording() {\r\n  isRecording = true;\r\n  isStopped = false;\r\n  // console.log({ isRecording, isStopped }, 'checking ');\r\n  if (recorder && recorder.state === 'recording') {\r\n    recorder.pause();\r\n    pauseTimer();\r\n    console.log('recording paused');\r\n  } else if (recorder && recorder.state === 'paused') {\r\n    recorder.resume();\r\n    isPaused = false;\r\n    resumeTimer();\r\n    console.log('resumed recording');\r\n  } else {\r\n    stream = navigator.mediaDevices.getDisplayMedia({\r\n      video: true,\r\n      audio: true,\r\n    });\r\n\r\n    audio = navigator.mediaDevices.getUserMedia({\r\n      video: false,\r\n      audio: true,\r\n    });\r\n    \r\n    let audioInput = await audio;\r\n    // startTimer();\r\n    // console.log('recording started');\r\n\r\n    stream\r\n      .then(async (mediaStream) => {\r\n        let media = new MediaStream([\r\n          ...mediaStream.getTracks(),\r\n          ...audioInput.getAudioTracks(),\r\n        ]);\r\n        recorder = new MediaRecorder(media, {\r\n          mimeType: 'video/webm;codecs=vp9,opus',\r\n        });\r\n        var audioTrack = mediaStream?.getAudioTracks();\r\n        console.log(audioTrack, 'audio track');\r\n\r\n        recorder.ondataavailable = (event) => {\r\n          if (event.data.size > 0) {\r\n            recordedChunks.push(event.data);\r\n          }\r\n        };\r\n\r\n        recorder.start();\r\n        startTimer();\r\n        console.log('recording started');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error accessing media devices:', error);\r\n      });\r\n  }\r\n}\r\n\r\n// async function stopRecording() {\r\n//   isStopped = true;\r\n//   isRecording = false;\r\n//   console.log({ isRecording, isStopped }, 'checking ');\r\n//   alert('capturing has ended');\r\n//   if (recorder && recorder.state !== 'inactive') {\r\n//     recorder.stop();\r\n//     stopTimer();\r\n//     recorder.onstop = async () => {\r\n//       var blob = new Blob(recordedChunks, {\r\n//         mimeType: 'video/webm;codecs=vp9,opus',\r\n//       });\r\n//       recordedChunks = [];\r\n\r\n//       if (stream) {\r\n//         const streamInstance = await stream;\r\n//         streamInstance.getTracks().forEach(track => track.stop());\r\n//         stream = null;\r\n//      }\r\n     \r\n//      if (audio) {\r\n//         const audioStream = await audio;\r\n//         audioStream.getTracks().forEach(track => track.stop());\r\n//         audio = null;\r\n//      }\r\n\r\n//       console.log(blob, 'blob  here');\r\n\r\n//       var formData = new FormData();\r\n//       formData.append(\r\n//         'video',\r\n//         blob,\r\n//         `HelpMeOut_video_${new Date().getTime()}.webm`\r\n//       );\r\n//       console.log(formData);\r\n//       // fetch(\r\n//       //   apiEndpoint, {\r\n//       //   method: 'POST',\r\n//       //   headers: {\r\n//       //     'Authorization': 'Bearer 02LTprR4LVUJBoev2NYTDRs4c1sOQXF3HLsYvTBiYsVnnTAiutNgfmy7VpJyRzjoOgMKcBGu7kHl3U97ceK4c2B4AEiek',\r\n//       //     // 'Content-Type':\t'application/json',\r\n//       //   //   'Accept': 'application/vnd.vimeo.*+json;version=3.4',\r\n//       //   },\r\n//       //   body: formData,\r\n//       //   //redirect_url: \"https://help-me-out-ext.netlify.app/playback\"\r\n//       // })\r\n//       //   .then((response) => {\r\n//       //     console.log(response);\r\n//       //     if (response.ok) {\r\n//       //       console.log('Screen recording sent to the API successfully.');\r\n//       //       var res = response.json();\r\n//       //       console.log(res);\r\n//       //       return res;\r\n//       //     } else {\r\n//       //       console.error('Error sending screen recording to the API.');\r\n//       //     }\r\n//       //   })\r\n//       //   .then(async (data) => {\r\n//       //     console.log('data' + data);\r\n//       //     if (data) {\r\n//       //       var baseUrl = 'https://help-me-out-ext.netlify.app';\r\n//       //       const videoURL =`${baseUrl}/playback?recording=${data.url}&transcript=${data.transcribe_url}&filename=${data.video_name}`\r\n           \r\n//       //       window.open(videoURL);\r\n//       //     } else throw new Error('An error occurred');\r\n//       //   })\r\n//       //   .catch((error) => {\r\n//       //     console.error('Error sending screen recording to the API:', error);\r\n//       //   });\r\n//       try {\r\n//         // Send the FormData to the API\r\n//         const response = await fetch(apiEndpoint, {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             Authorization: 'Bearer 02LTprR4LVUJBoev2NYTDRs4c1sOQXF3HLsYvTBiYsVnnTAiutNgfmy7VpJyRzjoOgMKcBGu7kHl3U97ceK4c2B4AEiek',\r\n//             // DO NOT set 'Content-Type' here\r\n//           },\r\n//           body: formData,\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           console.error('Error sending screen recording to the API:', response.statusText);\r\n//           return;\r\n//         }\r\n\r\n//         console.log('Screen recording sent to the API successfully.');\r\n//         const data = await response.json();\r\n//         console.log('API Response:', data);\r\n\r\n//         if (data) {\r\n//           const baseUrl = 'https://help-me-out-ext.netlify.app';\r\n//           const videoURL = `${baseUrl}/playback?recording=${data.url}&transcript=${data.transcribe_url}&filename=${data.video_name}`;\r\n//           window.open(videoURL);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error sending screen recording to the API:', error);\r\n//       }\r\n    \r\n//     };\r\n//   }\r\n// }\r\n\r\n\r\n// \r\n\r\n// Helper function to generate the signature\r\n\r\nasync function getSignature() {\r\n  const timestamp = Math.floor(Date.now() / 1000);\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:5000/generate-signature', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ timestamp, uid }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to get signature');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return { signature: data.signature, timestamp, folder: data.folder };\r\n  } catch (error) {\r\n    console.error('Error fetching signature:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function stopRecording() {\r\n  isStopped = true;\r\n  isRecording = false;\r\n  console.log({ isRecording, isStopped }, 'checking ');\r\n  alert('capturing has ended');\r\n  \r\n  if (recorder && recorder.state !== 'inactive') {\r\n    recorder.stop();\r\n    stopTimer();\r\n\r\n    recorder.onstop = async () => {\r\n      var blob = new Blob(recordedChunks, {\r\n        mimeType: 'video/webm;codecs=vp9,opus',\r\n      });\r\n      recordedChunks = [];\r\n\r\n      if (stream) {\r\n        const streamInstance = await stream;\r\n        streamInstance.getTracks().forEach(track => track.stop());\r\n        stream = null;\r\n      }\r\n\r\n      if (audio) {\r\n        const audioStream = await audio;\r\n        audioStream.getTracks().forEach(track => track.stop());\r\n        audio = null;\r\n      }\r\n\r\n      console.log(blob, 'blob here');\r\n\r\n      // Create FormData to upload to Cloudinary\r\n\r\n       const { signature, timestamp, folder } = await getSignature(user.uid);\r\n       \r\n\r\n      const formData = new FormData();\r\n      formData.append('file', blob, `HelpMeOut_video_${new Date().getTime()}.webm`);\r\n      formData.append('api_key', '247557432484292'); \r\n      formData.append('timestamp', timestamp);\r\n      formData.append('signature', signature);\r\n      formData.append('folder', folder);\r\n      console.log(formData);\r\n      try {\r\n        // Upload the video to Cloudinary\r\n        \r\n    const response = await fetch('https://api.cloudinary.com/v1_1/ddtbgrglm/video/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to upload video');\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log('Upload success:', result);\r\n\r\n    const videoUrl = result.secure_url;\r\n    if (videoUrl) {\r\n      const baseUrl = 'http://localhost:3000'; // Adjust as needed\r\n      const videoPlaybackUrl = `${baseUrl}/playback?recording=${videoUrl}&filename=${result.public_id}.webm`;\r\n      window.open(videoPlaybackUrl);\r\n    }\r\n        \r\n      } catch (error) {\r\n        console.error('Error during video upload or transcription:', error);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function recordVideo() {\r\n  try {\r\n    await navigator.mediaDevices\r\n      .getUserMedia({\r\n        audio: false,\r\n        video: true,\r\n      })\r\n      .then((vidStream) => {\r\n        cameraStream = vidStream;\r\n        videoSource.srcObject = vidStream;\r\n        videoSource.addEventListener('loadedmetadata', () => {\r\n          videoSource.play();\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.log('Error occurred', e);\r\n    }\r\n  }\r\n  \r\n  function deactivateVideo() {\r\n    if (!videoSource) return;\r\n    let stream = videoSource.srcObject;\r\n    let tracks = stream?.getTracks();\r\n    typeof tracks !== 'undefined' && tracks?.forEach((track) => track.stop());\r\n    videoSource.srcObject = null;\r\n  }\r\n  \r\n  async function activateAudio() {\r\n  try {\r\n    await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: false,\r\n    })\r\n    .then((stream) => {\r\n      mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorder.ondataavailable = function(event) {\r\n        if (event.data.size > 0) {\r\n          recordedChunks.push(event.data);\r\n        }\r\n      }\r\n    })\r\n  } catch (e) {\r\n    console.log('no audio');\r\n  }\r\n}\r\n\r\n\r\nfunction deleteMedia () {\r\n  recordedChunks = [];\r\n  // Clear the video element\r\n  videoSource.srcObject = '';\r\n\r\n  \r\n  if (mediaRecorder && mediaRecorder.stream) {\r\n    mediaRecorder.stream.getTracks().forEach((track) => track.stop());\r\n  }\r\n  videoContainer.style.display = 'none';\r\n}\r\n\r\nfunction uuid(len = 5) {\r\n  let char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghij012345678'.split('');\r\n  let id = '';\r\n  for (let i = 0; i < len; i++) {\r\n    const rand = Math.floor(Math.random() * char.length);\r\n    id += char[rand];\r\n  }\r\n  return 'HelpMeOut' + id;\r\n}\r\n\r\n\r\n\r\n\r\npauseBtn.addEventListener('click', (e) => {\r\n  // e.currentTarget.disabled = isRecording; // Disable the button\r\n  pauseBtn.style.background = '#4b4b4b';\r\n  if (isRecording && pauseImg.src === 'https://i.ibb.co/6Z030k8/play-svgrepo-com-2.png') {\r\n   // pauseBtn.classList.add('disabled');\r\n    pauseBtn.style.background = '#4b4b4b';\r\n    pauseBtn.style.paddingTop = '0.5vh';\r\n    pauseImg.style.height = '2vh';\r\n    pauseImg.style.width = '40%';\r\n    pauseImg.style.margin = 'auto';\r\n    pauseImg.src = 'https://i.ibb.co/0mbndK6/pause-1006-svgrepo-com.png';\r\n    pauseImg.alt = 'pause';\r\n  } else {\r\n    pauseImg.style.height = '3vh';\r\n    pauseImg.style.width = '40%';\r\n    pauseImg.style.margin = 'auto';\r\n    \r\n    pauseImg.src = 'https://i.ibb.co/6Z030k8/play-svgrepo-com-2.png';\r\n  }\r\n  startRecording();\r\n  \r\n});\r\n\r\nstopB.addEventListener('click', (e) => {\r\n  \r\n  if (isStopped) {\r\n    stopB.style.background = '#4b4b4b';\r\n  } else {\r\n    stopB.style.background = '#ffffff';\r\n  }\r\n  setTimeout(() => {\r\n    stopRecording();\r\n  }, 1000); // Stop \r\n} )\r\n\r\nvideoBtn.addEventListener('click', async (e) => {\r\n  videoBtn.style.background = '#4b4b4b';\r\n  \r\n  if (!isCamera) {\r\n    alert('camera activated');\r\n    isCamera = true;\r\n    videoContainer.style.display = 'block';\r\n    await recordVideo();\r\n  } else {\r\n    isCamera = false\r\n    videoContainer.style.display = 'none';\r\n    deactivateVideo();\r\n  }\r\n});\r\n\r\naudioBtn.addEventListener('click', async (e) => {\r\n  audioBtn.style.background = '#4b4b4b';\r\n  await activateAudio();\r\n});\r\n\r\n\r\n\r\ntrashImg.addEventListener('click', async (e) => {\r\n  trash.style.background = '#ffffff';\r\n  deleteMedia();\r\n})\r\n\r\n"],"names":[],"sourceRoot":""}